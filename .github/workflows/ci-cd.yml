name: golang-pipeline
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.22
    steps:
      - uses: actions/checkout@v4
      - name: Install sqlite3
        run: |
          apt-get update
          apt-get install -y sqlite3
      - name: Download Go dependencies
        run: go mod download
      - name: Create test database
        run: |
          sqlite3 tracker.db "CREATE TABLE IF NOT EXISTS parcel (
              number INTEGER PRIMARY KEY AUTOINCREMENT,
              client INTEGER NOT NULL,
              status TEXT NOT NULL,
              address TEXT NOT NULL,
              created_at TEXT NOT NULL
          );"
      - name: Run Unit Tests
        run: GOOS=linux GOARCH=amd64 go test
      - name: Vet
        run: |
          go vet ./...

  deploy:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Download Go dependencies
        run: go mod download
      - name: Install sqlite3
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3
      - name: Create database for Docker
        run: |
          sqlite3 tracker.db "CREATE TABLE IF NOT EXISTS parcel (
              number INTEGER PRIMARY KEY AUTOINCREMENT,
              client INTEGER NOT NULL,
              status TEXT NOT NULL,
              address TEXT NOT NULL,
              created_at TEXT NOT NULL
          );"
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/42-docker-tracker
      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}